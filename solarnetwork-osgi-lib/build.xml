<project basedir=".">

	<property name="include.group" value="central"/>
	
	<macrodef name="bundle-iterate">
		<attribute name="target"/>
		<sequential>
			<subant target="@{target}">
				<fileset refid="build.files"/>
			</subant>
		</sequential>
	</macrodef>
	
	<fileset id="bundle.build.xml" dir="${basedir}/.." includes="*/build.xml">
		<scriptselector language="javascript">
			self.setSelected( new java.io.File(file.getParentFile(), "META-INF").exists() )
		</scriptselector>
	</fileset>
	
	<target name="jar" description="Create bundle jars">
		<echo message="${toString:test.set}"/>
		<bundle-iterate target="jar"/>
	</target>
	
	<target name="clean" description="Clean all bundle build files">
		<echo message="${toString:test.set}"/>
		<bundle-iterate target="clean"/>
	</target>
	
	<target name="publish-group" description="Publish all projects from a group">
		<fileset id="build.files" dir="${basedir}/../..">
			<include name="solarnetwork-${include.group}/*/build.xml"/>
			<exclude name="solarnetwork-${include.group}/*.test/build.xml"/>
			<exclude name="solarnetwork-${include.group}/*.mock/build.xml"/>
		</fileset>
		<pathconvert property="build.bundles" pathsep="${line.separator}&#9;">
			<fileset refid="build.files"/>
			<mapper type="regexp" from="^.*/(solarnetwork-.*)/build.xml$$" to="\1"/>
		</pathconvert>
		<echo message="Projects to publish:${line.separator}&#9;${build.bundles}"/>
		<bundle-iterate target="publish"/>
	</target>

</project>
