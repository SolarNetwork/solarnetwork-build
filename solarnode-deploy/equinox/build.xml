<project basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" >

	<property file="${basedir}/build.properties"/>

	<property name="log.file" value="/dev/shm/solar/log/solarnode.log"/>
	<property name="dir.runtime.lib" value="../lib"/>
	<property name="dir.base" value="base"/>
	
	<property name="dir.build" value="build"/>
	<property name="dir.assemble" value="${dir.build}/assemble"/>
	<property name="dir.target" value="${basedir}/../../solarnetwork-osgi-lib"/>
	<property name="dir.platform" value="${basedir}/../../solarnetwork-osgi-target"/>
	<import file="${dir.target}/lib-build.xml"/>
	
	<patternset id="base.node.app.core">
		<include name="*.jar"/>
		<exclude name="aopalliance*"/>
		<exclude name="aspectj*"/>
		<exclude name="com.springsource.org.apache.commons.*"/>
		<exclude name="com.springsource.org.apache.juli.extras-*"/>
		<exclude name="commons-logging*"/>
	</patternset>

	<patternset id="spring.osgi">
		<include name="spring/org.springframework.osgi.*"/>
	</patternset>
	
	<patternset id="virgo.support">
		<include name="virgo/*"/>
		<exclude name="virgo/*-sources-*"/>
	</patternset>
	
	<target name="app-clean">
		<delete dir="${dir.build}" failonerror="no"/>
	</target>
	
	<target name="assemble-prepare">
		<mkdir dir="${dir.assemble}"/>
		<mkdir dir="${dir.assemble}/app/boot"/>
		<mkdir dir="${dir.assemble}/app/core"/>
		<mkdir dir="${dir.assemble}/app/main"/>
		<mkdir dir="${dir.assemble}/var"/>
	</target>
	
	<target name="assemble-base" depends="assemble-prepare">
		<copy todir="${dir.assemble}" flatten="no">
			<fileset dir="${dir.base}" includes="**">
				<exclude name="**/README.txt"/>
			</fileset>
		</copy>
	</target>
	
	<target name="app-boot" depends="ivy-init,assemble-prepare">
		<ivy:settings file="${ivy.settings}"/>
		<ivy:resolve file="${basedir}/ivy.xml" conf="boot"/>
		<delete dir="${dir.build}/jars" failonerror="no"/>
		<mkdir dir="${dir.build}/jars"/>
		<ivy:retrieve type="jar" pattern="${dir.build}/jars/[artifact]-[revision].[ext]"/>
		<mkdir dir="${dir.assemble}/app/boot"/>
		<copy todir="${dir.assemble}/app/boot" flatten="yes">
			<fileset dir="${dir.build}/jars" includes="*.jar"/>
		</copy>
		<copy todir="${dir.assemble}/app/boot" flatten="yes">
			<fileset dir="${dir.runtime.lib}/app-boot">
				<include name="*"/>
			</fileset>
		</copy>
	</target>
	
	<target name="app-gemini-web" depends="ivy-init,assemble-prepare">
		<ivy:settings file="${ivy.settings}"/>
		<ivy:resolve file="${basedir}/ivy.xml" conf="gemini"/>
		<delete dir="${dir.build}/jars" failonerror="no"/>
		<mkdir dir="${dir.build}/jars"/>
		<ivy:retrieve type="jar" pattern="${dir.build}/jars/[artifact]-[revision].[ext]"/>
		<mkdir dir="${dir.assemble}/app/core"/>
		<copy todir="${dir.assemble}/app/core" flatten="yes">
			<fileset dir="${dir.build}/jars" includes="*.jar"/>
		</copy>
	</target>
	
	<target name="app-core" depends="ivy-init,assemble-prepare">
		<ivy:settings file="${ivy.settings}"/>
		<ivy:resolve file="${basedir}/ivy.xml" conf="core"/>
		<delete dir="${dir.build}/jars" failonerror="no"/>
		<mkdir dir="${dir.build}/jars"/>
		<ivy:retrieve type="jar" pattern="${dir.build}/jars/[artifact]-[revision].[ext]"/>
		<mkdir dir="${dir.assemble}/app/core"/>
		<copy todir="${dir.assemble}/app/core" flatten="yes">
			<fileset dir="${dir.build}/jars" includes="*.jar"/>
		</copy>
		<copy todir="${dir.assemble}/app/core" filtering="no">
			<fileset dir="${dir.runtime.lib}/app-core" includes="**/*.jar"/>
		</copy>
		<copy todir="${dir.assemble}/app/core" filtering="yes">
			<fileset dir="${dir.runtime.lib}/app-core" includes="**" excludes="**/*.jar"/>
			<filterset>
				<filter token="LOGFILE" value="${log.file}"/>
			</filterset>
		</copy>
		<symlink action="delete" failonerror="no" link="${dir.assemble}/conf/log4j.properties"/>
		<symlink 
			link="${dir.assemble}/conf/log4j.properties" 
			resource="../app/core/net.solarnetwork.external.org.apache.log4j.config/log4j.properties" />
	</target>
	
	<target name="assemble" depends="assemble-base,app-boot,app-gemini-web,app-core"
		description="Assemble a base node directory structure"/>
	
	<target name="archive" depends="assemble"
		description="Assemble and then package a base node archive">
		<tar destfile="${dir.build}/base-equinox-node.tgz" compression="gzip" longfile="gnu">
			<tarfileset dir="${dir.assemble}">
				<include name="**"/>
				<exclude name="bin/*.sh"/>
			</tarfileset>
			<tarfileset dir="${dir.assemble}" mode="755">
				<include name="bin/*.sh"/>
			</tarfileset>
		</tar>
	</target>
	
</project>
